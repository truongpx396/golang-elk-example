version: '3.6'

services:
  app:
    build: .
    image: app:latest
    volumes:
      - ./logs/:/logs/
    ports:
      - 8080:8080
    networks: ['elk-network']

  node02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: node02
    volumes:
      - ./resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: ['CMD', 'curl', '-s', '-f', 'http://localhost:9200/_cat/health']
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 9200:9200
    networks: ['elk-network']

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.0-arm64
    volumes:
      - ./resources/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      node02:
        condition: service_healthy
    networks: ['elk-network']

  filebeat:
    image: docker.elastic.co/beats/auditbeat-oss:8.2.1-arm64
    depends_on:
      node02:
        condition: service_healthy
    command: auditbeat -e -strict.perms=false
    user: root
    pid: 'host' # Set the required permissions with pid and cap_add for Auditbeat
    cap_add: ['AUDIT_CONTROL', 'AUDIT_READ']
    volumes:
      - ./resources/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs/:/logs/
    networks: ['elk-network']

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    depends_on:
      node02:
        condition: service_healthy
    environment:
      ELASTICSEARCH_HOSTS: http://node02:9200
      elasticsearch.ssl.verificationMode: 'none'
    healthcheck:
      test: ['CMD', 'curl', '-s', '-f', 'http://localhost:5701/api/status']
      interval: 3s
      timeout: 3s
      retries: 50
    ports:
      - 5701:5601
    networks: ['elk-network']

networks:
  elk-network:
    name: elk-network
