version: '3.6'

services:
  mogodb:
    image: docker.io/bitnami/mongodb:7.0.2-debian-11-r7
    container_name: mongodb
    environment:
      # - BITNAMI_DEBUG = true
      - MONGODB_EXTRA_USERNAMES = root
      - MONGODB_EXTRA_DATABASES = openIM_v3
      - MONGODB_EXTRA_PASSWORDS = openIM123
      - MONGODB_ROOT_USER = root
      - MONGODB_ROOT_PASSWORD = openIM123
      - ALLOW_EMPTY_PASSWORD = 'no'
        # - name: MONGODB_SYSTEM_LOG_VERBOSITY
        #   value: '0'
        # - name: MONGODB_DISABLE_SYSTEM_LOG
        #   value: 'no'
        # - name: MONGODB_DISABLE_JAVASCRIPT
        #   value: 'no'
        # - name: MONGODB_ENABLE_JOURNAL
        #   value: 'yes'
        # - name: MONGODB_PORT_NUMBER
        #   value: '27017'
        # - name: MONGODB_ENABLE_IPV6
        #   value: 'no'
        # - name: MONGODB_ENABLE_DIRECTORY_PER_DB
        #   value: 'no'
    # healthcheck:
    #   test: ['CMD', 'curl', '-s', '-f', 'http://localhost:5701/api/status']
    #   interval: 3s
    #   timeout: 3s
    #   retries: 50
    ports:
      - 27017:27017
    # networks: ['elk-network']

  # app:
  #   build: .
  #   image: app:latest
  #   container_name: app
  #   volumes:
  #     - ./logs/:/logs/
  #   ports:
  #     - 8080:8080
  #   networks: ['elk-network']
#   node02:
#     image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
#     container_name: elasticsearch
#     # command: -e bootstrap.memory_lock=true
#     volumes:
#       - ./resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
#     healthcheck:
#       # test: ['CMD', 'curl', '-s', '-f', 'http://localhost:9200/_cat/health']
#       test:
#         [
#           'CMD-SHELL',
#           'curl -s http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=500ms',
#         ]
#       interval: 3s
#       timeout: 3s
#       retries: 10
#     ports:
#       - 9200:9200
#     networks: ['elk-network']

#   logstash:
#     image: docker.elastic.co/logstash/logstash:8.9.0-arm64
#     container_name: logstash
#     volumes:
#       - ./resources/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
#     depends_on:
#       node02:
#         condition: service_healthy
#     networks: ['elk-network']

#   filebeat:
#     image: docker.elastic.co/beats/filebeat:8.9.0-arm64
#     container_name: filebeat
#     depends_on:
#       node02:
#         condition: service_healthy
#     # command: auditbeat -e -strict.perms=false
#     user: root
#     pid: 'host' # Set the required permissions with pid and cap_add for Auditbeat
#     # cap_add: ['AUDIT_CONTROL', 'AUDIT_READ']
#     volumes:
#       - ./resources/filebeat.yml:/usr/share/filebeat/filebeat.yml
#       - ./logs/:/logs/
#     networks: ['elk-network']

#   kibana:
#     image: docker.elastic.co/kibana/kibana:8.9.0-arm64
#     container_name: kibana
#     depends_on:
#       node02:
#         condition: service_healthy
#     environment:
#       ELASTICSEARCH_HOSTS: http://elasticsearch:9200
#       elasticsearch.ssl.verificationMode: 'none'
#     healthcheck:
#       test: ['CMD', 'curl', '-s', '-f', 'http://localhost:5701/api/status']
#       interval: 3s
#       timeout: 3s
#       retries: 50
#     ports:
#       - 5701:5601
#     networks: ['elk-network']

# networks:
#   elk-network:
#     name: elk-network
